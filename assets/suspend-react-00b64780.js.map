{"version":3,"file":"suspend-react-00b64780.js","sources":["../../node_modules/suspend-react/dist/index.js"],"sourcesContent":["function shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nconst globalCache = [];\n\nfunction query(fn, keys, preload = false, config = {}) {\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) return entry.response; // If the promise is still unresolved, throw\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    promise: // Execute the promise\n    fn(...keys) // When it resolves, store its value\n    .then(response => entry.response = response) // Remove the entry if a lifespan was given\n    .then(() => {\n      if (config.lifespan && config.lifespan > 0) {\n        setTimeout(() => {\n          const index = globalCache.indexOf(entry);\n          if (index !== -1) globalCache.splice(index, 1);\n        }, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n\n    if (entry) {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    }\n  }\n};\n\nexport { clear, peek, preload, suspend };\n"],"names":["shallowEqualArrays","arrA","arrB","equal","a","b","len","i","globalCache","query","fn","keys","preload","config","entry","response","index","error","suspend","clear"],"mappings":"AAAA,SAASA,EAAmBC,EAAMC,EAAMC,EAAQ,CAACC,EAAGC,IAAMD,IAAMC,EAAG,CACjE,GAAIJ,IAASC,EAAM,MAAO,GAC1B,GAAI,CAACD,GAAQ,CAACC,EAAM,MAAO,GAC3B,MAAMI,EAAML,EAAK,OACjB,GAAIC,EAAK,SAAWI,EAAK,MAAO,GAEhC,QAASC,EAAI,EAAGA,EAAID,EAAKC,IAAK,GAAI,CAACJ,EAAMF,EAAKM,CAAC,EAAGL,EAAKK,CAAC,CAAC,EAAG,MAAO,GAEnE,MAAO,EACT,CAEA,MAAMC,EAAc,CAAA,EAEpB,SAASC,EAAMC,EAAIC,EAAMC,EAAU,GAAOC,EAAS,GAAI,CACrD,UAAWC,KAASN,EAElB,GAAIR,EAAmBW,EAAMG,EAAM,KAAMA,EAAM,KAAK,EAAG,CAErD,GAAIF,EAAS,OAEb,GAAI,OAAO,UAAU,eAAe,KAAKE,EAAO,OAAO,EAAG,MAAMA,EAAM,MAEtE,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAO,UAAU,EAAG,OAAOA,EAAM,SAE1E,GAAI,CAACF,EAAS,MAAME,EAAM,QAK9B,MAAMA,EAAQ,CACZ,KAAAH,EACA,MAAOE,EAAO,MACd,QACAH,EAAG,GAAGC,CAAI,EACT,KAAKI,GAAYD,EAAM,SAAWC,CAAQ,EAC1C,KAAK,IAAM,CACNF,EAAO,UAAYA,EAAO,SAAW,GACvC,WAAW,IAAM,CACf,MAAMG,EAAQR,EAAY,QAAQM,CAAK,EACnCE,IAAU,IAAIR,EAAY,OAAOQ,EAAO,CAAC,CACvD,EAAWH,EAAO,QAAQ,CAE1B,CAAK,EACA,MAAMI,GAASH,EAAM,MAAQG,CAAK,CACvC,EAIE,GAFAT,EAAY,KAAKM,CAAK,EAElB,CAACF,EAAS,MAAME,EAAM,OAE5B,CAEK,MAACI,EAAU,CAACR,EAAIC,EAAME,IAAWJ,EAAMC,EAAIC,EAAM,GAAOE,CAAM,EAE7DD,EAAU,CAACF,EAAIC,EAAME,IAAW,KAAKJ,EAAMC,EAAIC,EAAM,GAAME,CAAM,EAQjEM,EAAQR,GAAQ,CACpB,GAAIA,IAAS,QAAaA,EAAK,SAAW,EAAGH,EAAY,OAAO,EAAGA,EAAY,MAAM,MAAO,CAC1F,MAAMM,EAAQN,EAAY,KAAKM,GAASd,EAAmBW,EAAMG,EAAM,KAAMA,EAAM,KAAK,CAAC,EAEzF,GAAIA,EAAO,CACT,MAAME,EAAQR,EAAY,QAAQM,CAAK,EACnCE,IAAU,IAAIR,EAAY,OAAOQ,EAAO,CAAC,GAGnD","x_google_ignoreList":[0]}