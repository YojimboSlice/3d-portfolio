{"version":3,"file":"@emailjs-a704afdc.js","sources":["../../node_modules/@emailjs/browser/es/store/store.js","../../node_modules/@emailjs/browser/es/methods/init/init.js","../../node_modules/@emailjs/browser/es/utils/validateParams.js","../../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../../node_modules/@emailjs/browser/es/api/sendPost.js","../../node_modules/@emailjs/browser/es/methods/send/send.js","../../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../../node_modules/@emailjs/browser/es/index.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n"],"names":["store","init","publicKey","origin","validateParams","serviceID","templateID","EmailJSResponseStatus","httpResponse","sendPost","url","data","headers","resolve","reject","xhr","target","responseStatus","key","send","templatePrams","uID","findHTMLForm","form","currentForm","sendForm","formData","emailjs"],"mappings":"AAAO,MAAMA,EAAQ,CACjB,QAAS,yBACb,ECIaC,EAAO,CAACC,EAAWC,EAAS,4BAA8B,CACnEH,EAAM,QAAUE,EAChBF,EAAM,QAAUG,CACpB,ECTaC,EAAiB,CAACF,EAAWG,EAAWC,IAAe,CAChE,GAAI,CAACJ,EACD,KAAM,gFAEV,GAAI,CAACG,EACD,KAAM,wEAEV,GAAI,CAACC,EACD,KAAM,mFAEV,MAAO,EACX,ECXO,MAAMC,CAAsB,CAC/B,YAAYC,EAAc,CACtB,KAAK,OAASA,EAAeA,EAAa,OAAS,EACnD,KAAK,KAAOA,EAAeA,EAAa,aAAe,eAC1D,CACL,CCHO,MAAMC,EAAW,CAACC,EAAKC,EAAMC,EAAU,CAAA,IACnC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,MAAMC,EAAM,IAAI,eAChBA,EAAI,iBAAiB,OAAQ,CAAC,CAAE,OAAAC,CAAM,IAAO,CACzC,MAAMC,EAAiB,IAAIV,EAAsBS,CAAM,EACnDC,EAAe,SAAW,KAAOA,EAAe,OAAS,KACzDJ,EAAQI,CAAc,EAGtBH,EAAOG,CAAc,CAErC,CAAS,EACDF,EAAI,iBAAiB,QAAS,CAAC,CAAE,OAAAC,CAAM,IAAO,CAC1CF,EAAO,IAAIP,EAAsBS,CAAM,CAAC,CACpD,CAAS,EACDD,EAAI,KAAK,OAAQf,EAAM,QAAUU,EAAK,EAAI,EAC1C,OAAO,KAAKE,CAAO,EAAE,QAASM,GAAQ,CAClCH,EAAI,iBAAiBG,EAAKN,EAAQM,CAAG,CAAC,CAClD,CAAS,EACDH,EAAI,KAAKJ,CAAI,CACrB,CAAK,ECXQQ,EAAO,CAACd,EAAWC,EAAYc,EAAelB,IAAc,CACrE,MAAMmB,EAAMnB,GAAaF,EAAM,QAC/B,OAAAI,EAAeiB,EAAKhB,EAAWC,CAAU,EAQlCG,EAAS,uBAAwB,KAAK,UAP9B,CACX,YAAa,SACb,QAASY,EACT,WAAYhB,EACZ,YAAaC,EACb,gBAAiBc,CACzB,CACiE,EAAG,CAC5D,eAAgB,kBACxB,CAAK,CACL,ECrBME,EAAgBC,GAAS,CAC3B,IAAIC,EAOJ,GANI,OAAOD,GAAS,SAChBC,EAAc,SAAS,cAAcD,CAAI,EAGzCC,EAAcD,EAEd,CAACC,GAAeA,EAAY,WAAa,OACzC,KAAM,0FAEV,OAAOA,CACX,EASaC,EAAW,CAACpB,EAAWC,EAAYiB,EAAMrB,IAAc,CAChE,MAAMmB,EAAMnB,GAAaF,EAAM,QACzBwB,EAAcF,EAAaC,CAAI,EACrCnB,EAAeiB,EAAKhB,EAAWC,CAAU,EACzC,MAAMoB,EAAW,IAAI,SAASF,CAAW,EACzC,OAAAE,EAAS,OAAO,cAAe,QAAQ,EACvCA,EAAS,OAAO,aAAcrB,CAAS,EACvCqB,EAAS,OAAO,cAAepB,CAAU,EACzCoB,EAAS,OAAO,UAAWL,CAAG,EACvBZ,EAAS,4BAA6BiB,CAAQ,CACzD,EC9BeC,EAAA,CACX,KAAA1B,EACA,KAAAkB,EACA,SAAAM,CACJ","x_google_ignoreList":[0,1,2,3,4,5,6,7]}